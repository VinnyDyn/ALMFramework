pool:
  name: Azure Pipelines

parameters:
- name: serviceConnectionName
  type: string
  default: ''

- name: solution
  type: string
  default: ''

- name: gitUserName
  type: string
  default: ''

- name: gitUserEmail
  type: string
  default: ''

trigger: none

steps:
- checkout: self
  persistCredentials: true

- powershell: |
    $sourceBranch = '$(Build.SourceBranch)'.Split('/')
    $lastIndex = $sourceBranch[-1]
    echo "##vso[task.setvariable variable=branch]$lastIndex"
  displayName: '📌Get Branch Name'

- powershell: |
    git config --global user.email "${{parameters.gitUserEmail}}"
    git config --global user.name "${{parameters.gitUserName}}"
    git fetch
    git branch '$(branch)'
    git fetch
    git checkout '$(branch)'
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: '🐈Git fetch, branch and checkout'

- template: templates\install-pac.yaml

- task: PowerPlatformSetConnectionVariables@2
  name: connection
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: '${{parameters.serviceConnectionName}}'
  displayName: '🔐Set Connection Variables'

- powershell: |
    . '$(System.DefaultWorkingDirectory)/powershell/functions.ps1'
    Invoke-Clone-Or-Sync-Solution -p '$(pacPath)' -t '$(connection.BuildTools.TenantId)' -c '$(connection.BuildTools.ApplicationId)' -cs '$(connection.BuildTools.ClientSecret)' -u '$(BuildTools.EnvironmentUrl)' -f '$(System.DefaultWorkingDirectory)/solution/' -s '${{parameters.solution}}'
  displayName: '🔵pac - Clone or Sync Solution'

- powershell: |
    rm -rf '$(System.DefaultWorkingDirectory)/solution/'
    git add --all
    git commit -m 'Solution ${{parameters.solution}}'
    git push origin '$(branch)'
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: '🐈Git add, commit and push'